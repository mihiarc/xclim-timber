# Simple configuration for annual mean temperature calculation
# Edit the input_path to point to your external drive

data:
  # Path to your external drive with climate data
  input_path: ./data/sample_data
  
  # Output directory for results
  output_path: ./outputs
  
  # Log directory
  log_path: ./logs
  
  # File patterns for temperature data
  # Add patterns that match your temperature files
  file_patterns:
    temperature:
      - '*temperature*.nc'
      - '*temp*.nc'
      - '*tas*.nc'
      - '*t2m*.nc'
      - '*tmean*.nc'
      - '*temperature*.tif'
      - '*temp*.tif'
      - '*tas*.tif'
      - '*temperature*.zarr'  # Now supports Zarr stores
      - '*temp*.zarr'
      - '*tas*.zarr'

processing:
  # Memory management for processing large files
  max_files_per_batch: 10  # Process files in batches to manage memory

  # Target units for temperature calculations
  # Options: 'degC' (Celsius), 'K' (Kelvin), 'degF' (Fahrenheit)
  # The pipeline will automatically convert input data to these units
  temperature_units: 'degC'

  # Enable automatic unit conversion
  # If True, the pipeline will attempt to convert temperature units automatically
  auto_convert_units: true

  # Strict unit checking
  # If True, pipeline will fail if units cannot be determined
  # If False, pipeline will log warnings and attempt to proceed
  strict_units: false

indices:
  # Baseline period for percentile calculations (WMO standard)
  # Note: Our sample data is 2001-2025, so percentile-based indices
  # that require baseline data won't work without historical data
  baseline_period:
    start: 1971
    end: 2000
  use_baseline_for_percentiles: true

  # Calculate multiple temperature indices
  temperature:
    - tg_mean        # Annual mean temperature
    - tx_max         # Annual maximum temperature
    - tn_min         # Annual minimum temperature
    - frost_days     # Number of frost days (Tmin < 0°C)
    - summer_days    # Number of summer days (Tmax > 25°C)
    - tropical_nights # Number of tropical nights (Tmin > 20°C)

output:
  format: 'netcdf'  # or 'geotiff'
  compression:
    complevel: 4
    engine: 'netcdf4'

  # CSV output options
  csv_formats:
    long_format: true    # Each row = location-year combination
    wide_format: true    # Each row = location, columns = index_year
    historical_only: true # Only include years 1950-2014